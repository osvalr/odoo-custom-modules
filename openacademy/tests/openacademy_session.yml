-
  In order to successfully create a session, it is necessary
  to create some attendees to associate it
-
  !record {model: res.users, id: attendee_id_0}:
    name: Eric Schmidt
    login: Eric Schmidt
    company_id: base.main_company
-
  Test if is active
-
  !assert {model: res.users, id: attendee_id_0}:
    - active == True
-
  create a second attendee
-
  !record {model: res.users, id: attendee_id_1}:
    name: Steve Wozniak
    login: Steve Wozniak
    company_id: base.main_company
-
  Test if is active
-
  !assert {model: res.users, id: attendee_id_1}:
    - active == True
-
  create a third attendee
-
  !record {model: res.users, id: attendee_id_2}:
    name: Larry Ellison
    login: Larry Ellison
    company_id: base.main_company
-
  Test if is active
-
  !assert {model: res.users, id: attendee_id_2}:
    - active == True
-
  It is necessary to create a partner that is going
  to be the session instructor
-
  !record {model: res.partner, id: instructor_id_0}:
    name: Marissa Mayer
-
  Test if is active
-
  !assert {model: res.partner, id: instructor_id_0}:
    - active == True
-
  create a second instructor
-
  !record {model: res.partner, id: instructor_id_1}:
    name: Sergey Brin
-
  Test if is active
-
  !assert {model: res.partner, id: instructor_id_1}:
    - active == True
-
  In order to test sessions, some sessions are going to be created
  and assigned to course_id_0 and only one is going to trigger
  the workflow established for seats occupation.
-
  !record {model: openacademy.session, id: session_id_0_0}:
    name: April 13 Session
    course_id: openacademy_course_1
    instructor_id: instructor_id_0
    seats: 6
    start_date: !eval time.strftime('2015-04-13 8:00')
    end_date: !eval time.strftime('2015-04-13 20:00')
-
  check if is draft
-
  !assert {model: openacademy.session, id: session_id_0_0}:
    - state == 'draft' and active == True
-
  create session for nov 16
-
  !record {model: openacademy.session, id: session_id_0_1}:
    name: November 16 Session
    course_id: ref('openacademy_course_1')
    instructor_id: instructor_id_1
    seats: 4
    start_date: !eval time.strftime('2015-11-16 8:00')
    end_date: !eval time.strftime('2015-11-16 20:00')
-
  Test if is still as draft
-
  !assert {model: openacademy.session, id: session_id_0_1}:
    - state == 'draft' and active == True and taken_seats == 0
-
  Suscribe attendees in session_id_0_1
-
  !record {model: openacademy.session, id: session_id_0_1}:
    attendee_ids:
      - attendee_id_0
      - attendee_id_1
      - attendee_id_2
-
  Test how many taken seats are there now
-
  !assert {model: openacademy.session, id: session_id_0_1}:
    - taken_seats == 75
-
  Test if now with 75% seats occupied, what is the session state?
-
  !assert {model: openacademy.session, id: session_id_0_1}:
    - state == 'confirmed'